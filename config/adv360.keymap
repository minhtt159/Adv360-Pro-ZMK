/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LAYALT  1
#define LAYSYM  2
#define LAYMOD  3

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <150>;
        };

        okl: outer_key_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "Outer_Key_Layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <45 28>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL   &kp N1       &kp N2      &kp N3      &kp N4       &kp N5    &mo 3                                                                        &mo LAYMOD  &kp N6    &kp N7       &kp N8      &kp N9      &kp N0          &kp MINUS
&kp TAB     &kp Q        &kp W       &kp E       &kp R        &kp T     &none                                                                        &none       &kp Y     &kp U        &kp I       &kp O       &kp P           &kp BSLH
&okl 1 ESC  &hm LCTRL A  &hm LALT S  &hm LCMD D  &hm LSHFT F  &okl 2 G  &mo 1      &kp LCMD  &kp LALT                    &kp RCTRL     &hm RCMD ESC  &mo 1       &okl 2 H  &hm RSHFT J  &hm RCMD K  &hm RALT L  &hm RCTRL SEMI  &okl 1 SQT
&kp LSHFT   &kp Z        &kp X       &kp C       &kp V        &kp B                          &hm LS(LC(LALT)) LC(B)      &kp PG_UP                               &kp N     &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp RSHFT
&mo LAYSYM  &kp GRAVE    &kp CAPS    &kp LEFT    &kp RIGHT              &kp SPACE  &kp BSPC  &mo 2                       &okl 2 PG_DN  &kp ENTER     &kp SPACE             &kp UP       &kp DOWN    &kp LBKT    &kp RBKT        &mo LAYSYM
            >;
        };

        layer_alt {
            bindings = <
&trans  &kp C_PLAY_PAUSE  &kp F10  &kp F11  &kp F12  &trans  &trans                                      &trans     &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans  &kp C_VOL_UP      &kp F7   &kp F8   &kp F9   &trans  &trans                                      &trans     &trans  &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&trans  &kp C_VOL_DN      &kp F4   &kp F5   &kp F6   &trans  &trans  &trans  &trans      &trans  &trans  &trans     &trans  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans  &kp K_MUTE        &kp F1   &kp F2   &kp F3   &trans                  &trans      &trans                     &trans  &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans  &trans            &trans   &trans   &trans           &trans  &trans  &trans      &trans  &trans  &kp KP_N0          &trans      &trans        &kp KP_DOT     &trans           &trans
            >;
        };

        layer_sym {
            bindings = <
&trans    &trans     &trans     &trans     &trans    &trans     &trans                                            &trans  &trans    &trans    &trans    &trans     &trans     &trans
&kp EXCL  &kp LBRC   &kp SQT    &kp DQT    &kp RBRC  &kp QMARK  &trans                                            &trans  &kp SEMI  &kp LBKT  &kp RBKT  &kp LPAR   &kp RPAR   &trans
&kp HASH  &kp CARET  &kp EQUAL  &kp MINUS  &kp DLLR  &kp STAR   &trans     &kp TILDE  &trans      &trans  &trans  &trans  &kp DOT   &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &kp EQUAL
&kp AT    &kp LT     &kp PIPE   &kp MINUS  &kp GT    &kp FSLH                         &trans      &trans                  &kp STAR  &kp BSLH  &kp AMPS  &kp GRAVE  &kp TILDE  &trans
&trans    &trans     &trans     &trans     &trans               &kp PRCNT  &kp COLON  &trans      &trans  &trans  &trans            &trans    &trans    &trans     &trans     &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none     &none      &none
&none  &none         &none         &none         &none           &none         &bootloader                                            &bootloader             &none  &none       &none       &none     &none      &none
&none  &kp LEFT      &kp UP        &kp DOWN      &kp RIGHT       &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &kp RSHIFT  &kp RCMD    &kp RALT  &kp RCTRL  &none
&none  &none         &none         &macro_ver    &macro_kinesis  &none                             &none      &none                                           &none  &none       &none       &none     &none      &none
&none  &none         &none         &none         &none                         &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none     &none      &none
            >;
        };
    };
};
